!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/jonah/.local/src/dwm/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/p5.9.20210110.0/
${OBJ}	Makefile	/^${OBJ}: config.h config.mk$/;"	t
-0,0 +1,40	diff_files/dwm-dwmc-6.2.diff	/^@@ -0,0 +1,40 @@$/;"	h	newFile:b/dwmc
-1,17 +1,23	diff_files/dwm-rounded-gaps-fullscreen.diff	/^@@ -1,17 +1,23 @@$/;"	h	modifiedFile:dwm-6.2/config.def.h
-106,6 +106,11	diff_files/dwm-dwmc-6.2.diff	/^@@ -106,6 +106,11 @@ typedef struct {$/;"	h	modifiedFile:a/dwm.c
-1062,7 +1072,7	diff_files/dwm-attachbottom-6.2.diff	/^@@ -1062,7 +1072,7 @@ manage(Window w, XWindowAttributes *wa)$/;"	h	modifiedFile:dwm-6.2/dwm.c
-1107,12 +1175,12	diff_files/dwm-single_tagset-20211114-a786211.diff	/^@@ -1107,12 +1175,12 @@ monocle(Monitor *m)$/;"	h	modifiedFile:a/dwm.c
-111,6 +111,7	diff_files/dwm-pertag-20200914-61bb8b2.diff	/^@@ -111,6 +111,7 @@ typedef struct {$/;"	h	modifiedFile:a/dwm.c
-113,3 +113,73	diff_files/dwm-dwmc-6.2.diff	/^@@ -113,3 +113,73 @@ static Button buttons[] = {$/;"	h	modifiedFile:a/config.def.h
-119,6 +120,10	diff_files/dwm-rounded-gaps-fullscreen.diff	/^@@ -119,6 +120,10 @@$/;"	h	modifiedFile:dwm-6.2/dwm.c
-1194,9 +1262,9	diff_files/dwm-single_tagset-20211114-a786211.diff	/^@@ -1194,9 +1262,9 @@ movemouse(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-1215,8 +1264,10	diff_files/dwm-dwmc-6.2.diff	/^@@ -1215,8 +1264,10 @@ propertynotify(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-1222,21 +1222,21	diff_files/multimon-4-added-statusall-toggle-replacing-need-for-patch.diff	/^@@ -1222,21 +1222,21 @@ propertynotify(XEvent *e) {$/;"	h	modifiedFile:a/dwm.c
-124,9 +126,8	diff_files/dwm-single_tagset-20211114-a786211.diff	/^@@ -124,9 +126,8 @@ struct Monitor {$/;"	h	modifiedFile:a/dwm.c
-1284,6 +1307,7	diff_files/dwm-rounded-gaps-fullscreen.diff	/^@@ -1284,6 +1307,7 @@$/;"	h	modifiedFile:dwm-6.2/dwm.c
-1291,9 +1291,14	diff_files/dwm-resizecorners-6.2.diff	/^@@ -1291,9 +1291,14 @@$/;"	h	modifiedFile:a/dwm.c
-130,6 +130,7	diff_files/dwm-alternativetags-6.2.diff	/^@@ -130,6 +130,7 @@ struct Monitor {$/;"	h	modifiedFile:a/dwm.c
-130,6 +131,7	diff_files/dwm-pertag-20200914-61bb8b2.diff	/^@@ -130,6 +131,7 @@ struct Monitor {$/;"	h	modifiedFile:a/dwm.c
-1303,10 +1308,18	diff_files/dwm-resizecorners-6.2.diff	/^@@ -1303,10 +1308,18 @@$/;"	h	modifiedFile:a/dwm.c
-1322,6 +1335,11	diff_files/dwm-resizecorners-6.2.diff	/^@@ -1322,6 +1335,11 @@$/;"	h	modifiedFile:a/dwm.c
-1325,21 +1325,21	diff_files/multimon-4-added-statusall-toggle-replacing-need-for-patch.diff	/^@@ -1325,21 +1325,21 @@ resizemouse(const Arg *arg) {$/;"	h	modifiedFile:a/dwm.c
-1330,11 +1348,13	diff_files/dwm-resizecorners-6.2.diff	/^@@ -1330,11 +1348,13 @@$/;"	h	modifiedFile:a/dwm.c
-1351,6 +1375,9	diff_files/dwm-rounded-gaps-fullscreen.diff	/^@@ -1351,6 +1375,9 @@$/;"	h	modifiedFile:dwm-6.2/dwm.c
-1360,8 +1428,8	diff_files/dwm-single_tagset-20211114-a786211.diff	/^@@ -1360,8 +1428,8 @@ restack(Monitor *m)$/;"	h	modifiedFile:a/dwm.c
-141,12 +142,18	diff_files/dwm-single_tagset-20211114-a786211.diff	/^@@ -141,12 +142,18 @@ typedef struct {$/;"	h	modifiedFile:a/dwm.c
-1414,11 +1482,9	diff_files/dwm-single_tagset-20211114-a786211.diff	/^@@ -1414,11 +1482,9 @@ sendmon(Client *c, Monitor *m)$/;"	h	modifiedFile:a/dwm.c
-1417,7 +1427,7	diff_files/dwm-attachbottom-6.2.diff	/^@@ -1417,7 +1427,7 @@ sendmon(Client *c, Monitor *m)$/;"	h	modifiedFile:dwm-6.2/dwm.c
-1469,7 +1496,113	diff_files/dwm-rounded-gaps-fullscreen.diff	/^@@ -1469,7 +1496,113 @@$/;"	h	modifiedFile:dwm-6.2/dwm.c
-147,6 +147,7	diff_files/dwm-attachbottom-6.2.diff	/^@@ -147,6 +147,7 @@ static int applysizehints(Client *c, int$/;"	h	modifiedFile:dwm-6.2/dwm.c
-1475,21 +1475,21	diff_files/multimon-4-added-statusall-toggle-replacing-need-for-patch.diff	/^@@ -1475,21 +1475,21 @@ setfullscreen(Client *c, Bool fullscreen) {$/;"	h	modifiedFile:a/dwm.c
-148,6 +153,7	diff_files/dwm-dwmc-6.2.diff	/^@@ -148,6 +153,7 @@ static void arrange(Monitor *m);$/;"	h	modifiedFile:a/dwm.c
-1497,7 +1630,22	diff_files/dwm-rounded-gaps-fullscreen.diff	/^@@ -1497,7 +1630,22 @@$/;"	h	modifiedFile:dwm-6.2/dwm.c
-1502,9 +1528,9	diff_files/dwm-pertag-20200914-61bb8b2.diff	/^@@ -1502,9 +1528,9 @@ void$/;"	h	modifiedFile:a/dwm.c
-1523,7 +1549,7	diff_files/dwm-pertag-20200914-61bb8b2.diff	/^@@ -1523,7 +1549,7 @@ setmfact(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-1541,6 +1607,8	diff_files/dwm-single_tagset-20211114-a786211.diff	/^@@ -1541,6 +1607,8 @@ setup(void)$/;"	h	modifiedFile:a/dwm.c
-1559,6 +1627,7	diff_files/dwm-single_tagset-20211114-a786211.diff	/^@@ -1559,6 +1627,7 @@ setup(void)$/;"	h	modifiedFile:a/dwm.c
-1616,7 +1685,7	diff_files/dwm-single_tagset-20211114-a786211.diff	/^@@ -1616,7 +1685,7 @@ showhide(Client *c)$/;"	h	modifiedFile:a/dwm.c
-1656,7 +1725,23	diff_files/dwm-single_tagset-20211114-a786211.diff	/^@@ -1656,7 +1725,23 @@ spawn(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-1673,26 +1821,33	diff_files/dwm-rounded-gaps-fullscreen.diff	/^@@ -1673,26 +1821,33 @@$/;"	h	modifiedFile:dwm-6.2/dwm.c
-1677,7 +1762,7	diff_files/dwm-single_tagset-20211114-a786211.diff	/^@@ -1677,7 +1762,7 @@ tile(Monitor *m)$/;"	h	modifiedFile:a/dwm.c
-1685,7 +1770,7	diff_files/dwm-single_tagset-20211114-a786211.diff	/^@@ -1685,7 +1770,7 @@ tile(Monitor *m)$/;"	h	modifiedFile:a/dwm.c
-1696,6 +1720,13	diff_files/dwm-alternativetags-6.2.diff	/^@@ -1696,6 +1720,13 @@ tile(Monitor *m)$/;"	h	modifiedFile:a/dwm.c
-1702,7 +1728,7	diff_files/dwm-pertag-20200914-61bb8b2.diff	/^@@ -1702,7 +1728,7 @@ tile(Monitor *m)$/;"	h	modifiedFile:a/dwm.c
-1725,12 +1810,17	diff_files/dwm-single_tagset-20211114-a786211.diff	/^@@ -1725,12 +1810,17 @@ togglefloating(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-1740,12 +1830,27	diff_files/dwm-single_tagset-20211114-a786211.diff	/^@@ -1740,12 +1830,27 @@ toggletag(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-1741,9 +1767,33	diff_files/dwm-pertag-20200914-61bb8b2.diff	/^@@ -1741,9 +1767,33 @@ void$/;"	h	modifiedFile:a/dwm.c
-176,6 +177,7	diff_files/dwm-alternativetags-6.2.diff	/^@@ -176,6 +177,7 @@ static void grabbuttons(Client *c, int focused);$/;"	h	modifiedFile:a/dwm.c
-184,7 +191,7	diff_files/dwm-single_tagset-20211114-a786211.diff	/^@@ -184,7 +191,7 @@ static void maprequest(XEvent *e);$/;"	h	modifiedFile:a/dwm.c
-1844,7 +1949,7	diff_files/dwm-single_tagset-20211114-a786211.diff	/^@@ -1844,7 +1949,7 @@ updateclientlist()$/;"	h	modifiedFile:a/dwm.c
-1874,8 +1979,10	diff_files/dwm-single_tagset-20211114-a786211.diff	/^@@ -1874,8 +1979,10 @@ updategeom(void)$/;"	h	modifiedFile:a/dwm.c
-1895,16 +2002,13	diff_files/dwm-single_tagset-20211114-a786211.diff	/^@@ -1895,16 +2002,13 @@ updategeom(void)$/;"	h	modifiedFile:a/dwm.c
-1897,7 +1907,7	diff_files/dwm-attachbottom-6.2.diff	/^@@ -1897,7 +1907,7 @@ updategeom(void)$/;"	h	modifiedFile:dwm-6.2/dwm.c
-1941,21 +1941,21	diff_files/multimon-4-added-statusall-toggle-replacing-need-for-patch.diff	/^@@ -1941,21 +1941,21 @@ updatetitle(Client *c) {$/;"	h	modifiedFile:a/dwm.c
-199,6 +204,17	diff_files/dwm-rounded-gaps-fullscreen.diff	/^@@ -199,6 +204,17 @@$/;"	h	modifiedFile:dwm-6.2/dwm.c
-20,6 +20,7	diff_files/dwm-single_tagset-20211114-a786211.diff	/^@@ -20,6 +20,7 @@$/;"	h	modifiedFile:a/dwm.c
-20,6 +20,8	diff_files/dwm-alternativetags-6.2.diff	/^@@ -20,6 +20,8 @@ static const char *colors[][3]      = {$/;"	h	modifiedFile:a/config.def.h
-2016,6 +2120,14	diff_files/dwm-single_tagset-20211114-a786211.diff	/^@@ -2016,6 +2120,14 @@ updatewindowtype(Client *c)$/;"	h	modifiedFile:a/dwm.c
-2038,11 +2088,37	diff_files/dwm-pertag-20200914-61bb8b2.diff	/^@@ -2038,11 +2088,37 @@ updatewmhints(Client *c)$/;"	h	modifiedFile:a/dwm.c
-2038,13 +2150,32	diff_files/dwm-single_tagset-20211114-a786211.diff	/^@@ -2038,13 +2150,32 @@ updatewmhints(Client *c)$/;"	h	modifiedFile:a/dwm.c
-2054,7 +2185,7	diff_files/dwm-single_tagset-20211114-a786211.diff	/^@@ -2054,7 +2185,7 @@ wintoclient(Window w)$/;"	h	modifiedFile:a/dwm.c
-209,6 +211,7	diff_files/dwm-alternativetags-6.2.diff	/^@@ -209,6 +211,7 @@ static void spawn(const Arg *arg);$/;"	h	modifiedFile:a/dwm.c
-2121,8 +2252,8	diff_files/dwm-single_tagset-20211114-a786211.diff	/^@@ -2121,8 +2252,8 @@ zoom(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-2122,6 +2277,54	diff_files/dwm-rounded-gaps-fullscreen.diff	/^@@ -2122,6 +2277,54 @@$/;"	h	modifiedFile:dwm-6.2/dwm.c
-22,7 +22,7	diff_files/dwm-rounded-gaps-fullscreen.diff	/^@@ -22,7 +22,7 @@$/;"	h	modifiedFile:dwm-6.2/config.mk
-226,6 +233,7	diff_files/dwm-single_tagset-20211114-a786211.diff	/^@@ -226,6 +233,7 @@ static void updatesizehints(Client *c);$/;"	h	modifiedFile:a/dwm.c
-24,20 +24,21	diff_files/multimon-4-added-statusall-toggle-replacing-need-for-patch.diff	/^@@ -24,20 +24,21 @@ static const Rule rules[] = {$/;"	h	modifiedFile:a/config.def.h
-240,6 +256,9	diff_files/dwm-rounded-gaps-fullscreen.diff	/^@@ -240,6 +256,9 @@$/;"	h	modifiedFile:dwm-6.2/dwm.c
-253,6 +256,7	diff_files/dwm-alternativetags-6.2.diff	/^@@ -253,6 +256,7 @@ static void (*handler[LASTEvent]) (XEvent *) = {$/;"	h	modifiedFile:a/dwm.c
-268,6 +276,7	diff_files/dwm-single_tagset-20211114-a786211.diff	/^@@ -268,6 +276,7 @@ static Display *dpy;$/;"	h	modifiedFile:a/dwm.c
-272,6 +274,15	diff_files/dwm-pertag-20200914-61bb8b2.diff	/^@@ -272,6 +274,15 @@ static Window root, wmcheckwin;$/;"	h	modifiedFile:a/dwm.c
-28,13 +34,13	diff_files/dwm-rounded-gaps-fullscreen.diff	/^@@ -28,13 +34,13 @@$/;"	h	modifiedFile:dwm-6.2/config.def.h
-300,7 +309,7	diff_files/dwm-single_tagset-20211114-a786211.diff	/^@@ -300,7 +309,7 @@ applyrules(Client *c)$/;"	h	modifiedFile:a/dwm.c
-38,7 +38,7	diff_files/dwm-dwmc-6.2.diff	/^@@ -38,7 +38,7 @@ dist: clean$/;"	h	modifiedFile:a/Makefile
-382,9 +391,9	diff_files/dwm-single_tagset-20211114-a786211.diff	/^@@ -382,9 +391,9 @@ void$/;"	h	modifiedFile:a/dwm.c
-39,6 +39,7	diff_files/dwm-rounded-gaps-fullscreen.diff	/^@@ -39,6 +39,7 @@$/;"	h	modifiedFile:dwm-6.2/dwm.c
-396,6 +405,10	diff_files/dwm-single_tagset-20211114-a786211.diff	/^@@ -396,6 +405,10 @@ void$/;"	h	modifiedFile:a/dwm.c
-403,15 +416,49	diff_files/dwm-single_tagset-20211114-a786211.diff	/^@@ -403,15 +416,49 @@ arrangemon(Monitor *m)$/;"	h	modifiedFile:a/dwm.c
-407,6 +408,15	diff_files/dwm-attachbottom-6.2.diff	/^@@ -407,6 +408,15 @@ attach(Client *c)$/;"	h	modifiedFile:dwm-6.2/dwm.c
-44,7 +50,7	diff_files/dwm-rounded-gaps-fullscreen.diff	/^@@ -44,7 +50,7 @@$/;"	h	modifiedFile:dwm-6.2/config.def.h
-478,8 +525,8	diff_files/dwm-single_tagset-20211114-a786211.diff	/^@@ -478,8 +525,8 @@ cleanup(void)$/;"	h	modifiedFile:a/dwm.c
-49,7 +50,7	diff_files/dwm-single_tagset-20211114-a786211.diff	/^@@ -49,7 +50,7 @@$/;"	h	modifiedFile:a/dwm.c
-565,7 +612,7	diff_files/dwm-single_tagset-20211114-a786211.diff	/^@@ -565,7 +612,7 @@ configurenotify(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-61,23 +67,25	diff_files/dwm-rounded-gaps-fullscreen.diff	/^@@ -61,23 +67,25 @@$/;"	h	modifiedFile:dwm-6.2/config.def.h
-611,7 +658,7	diff_files/dwm-single_tagset-20211114-a786211.diff	/^@@ -611,7 +658,7 @@ configurerequest(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-62,7 +63,7	diff_files/dwm-single_tagset-20211114-a786211.diff	/^@@ -62,7 +63,7 @@ enum { CurNormal, CurResize, CurMove, CurLast }; \/* cursor *\/$/;"	h	modifiedFile:a/dwm.c
-631,10 +678,31	diff_files/dwm-single_tagset-20211114-a786211.diff	/^@@ -631,10 +678,31 @@ configurerequest(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-632,6 +643,7	diff_files/dwm-pertag-20200914-61bb8b2.diff	/^@@ -632,6 +643,7 @@ Monitor *$/;"	h	modifiedFile:a/dwm.c
-638,6 +657,10	diff_files/dwm-rounded-gaps-fullscreen.diff	/^@@ -638,6 +657,10 @@$/;"	h	modifiedFile:dwm-6.2/dwm.c
-642,6 +654,20	diff_files/dwm-pertag-20200914-61bb8b2.diff	/^@@ -642,6 +654,20 @@ createmon(void)$/;"	h	modifiedFile:a/dwm.c
-660,7 +728,7	diff_files/dwm-single_tagset-20211114-a786211.diff	/^@@ -660,7 +728,7 @@ detach(Client *c)$/;"	h	modifiedFile:a/dwm.c
-669,11 +737,11	diff_files/dwm-single_tagset-20211114-a786211.diff	/^@@ -669,11 +737,11 @@ detachstack(Client *c)$/;"	h	modifiedFile:a/dwm.c
-695,7 +699,7	diff_files/dwm-alternativetags-6.2.diff	/^@@ -695,7 +699,7 @@ dirtomon(int dir)$/;"	h	modifiedFile:a/dwm.c
-7,8 +7,8	diff_files/dwm-rounded-gaps-fullscreen.diff	/^@@ -7,8 +7,8 @@$/;"	h	modifiedFile:dwm-6.2/config.mk
-709,7 +777,7	diff_files/dwm-single_tagset-20211114-a786211.diff	/^@@ -709,7 +777,7 @@ drawbar(Monitor *m)$/;"	h	modifiedFile:a/dwm.c
-716,8 +720,9	diff_files/dwm-alternativetags-6.2.diff	/^@@ -716,8 +720,9 @@ drawbar(Monitor *m)$/;"	h	modifiedFile:a/dwm.c
-719,21 +719,21	diff_files/multimon-4-added-statusall-toggle-replacing-need-for-patch.diff	/^@@ -719,21 +719,21 @@ drawbar(Monitor *m) {$/;"	h	modifiedFile:a/dwm.c
-779,21 +779,21	diff_files/multimon-4-added-statusall-toggle-replacing-need-for-patch.diff	/^@@ -779,21 +779,21 @@ enternotify(XEvent *e) {$/;"	h	modifiedFile:a/dwm.c
-784,8 +852,8	diff_files/dwm-single_tagset-20211114-a786211.diff	/^@@ -784,8 +852,8 @@ expose(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-82,6 +83,7	diff_files/dwm-single_tagset-20211114-a786211.diff	/^@@ -82,6 +83,7 @@ typedef struct {$/;"	h	modifiedFile:a/dwm.c
-838,16 +906,16	diff_files/dwm-single_tagset-20211114-a786211.diff	/^@@ -838,16 +906,16 @@ focusstack(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-84,6 +86,7	diff_files/dwm-alternativetags-6.2.diff	/^@@ -84,6 +86,7 @@ static Key keys[] = {$/;"	h	modifiedFile:a/config.def.h
-882,6 +882,8	diff_files/dwm-cursorwarp-mononly-20210222-61bb8b2.diff	/^@@ -882,6 +882,8 @@ focusmon(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-93,7 +101,9	diff_files/dwm-rounded-gaps-fullscreen.diff	/^@@ -93,7 +101,9 @@$/;"	h	modifiedFile:dwm-6.2/config.def.h
-967,7 +993,7	diff_files/dwm-pertag-20200914-61bb8b2.diff	/^@@ -967,7 +993,7 @@ grabkeys(void)$/;"	h	modifiedFile:a/dwm.c
-998,6 +1003,25	diff_files/dwm-alternativetags-6.2.diff	/^@@ -998,6 +1003,25 @@ keypress(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-998,6 +1004,49	diff_files/dwm-dwmc-6.2.diff	/^@@ -998,6 +1004,49 @@ keypress(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
.c.o	Makefile	/^.c.o:$/;"	t
Arg	dwm.c	/^} Arg;$/;"	t	typeref:union:__anon0f53a99e060a	file:
BETWEEN	util.h	/^#define BETWEEN(/;"	d
BUGS	dwm.1	/^.SH BUGS$/;"	s	title:DWM
BUTTONMASK	dwm.c	/^#define BUTTONMASK /;"	d	file:
Button	dwm.c	/^} Button;$/;"	t	typeref:struct:__anon0f53a99e0708	file:
CC	config.mk	/^CC = cc$/;"	m
CFLAGS	config.mk	/^CFLAGS   = -std=c99 -pedantic -Wall -Wno-deprecated-declarations -Os ${INCS} ${CPPFLAGS}$/;"	m
CLEANMASK	dwm.c	/^#define CLEANMASK(/;"	d	file:
CPPFLAGS	config.mk	/^CPPFLAGS = -D_DEFAULT_SOURCE -D_BSD_SOURCE -D_POSIX_C_SOURCE=200809L -DVERSION=\\"${VERSION}\\" /;"	m
CUSTOMIZATION	dwm.1	/^.SH CUSTOMIZATION$/;"	s	title:DWM
Client	dwm.c	/^struct Client {$/;"	s	file:
Client	dwm.c	/^typedef struct Client Client;$/;"	t	typeref:struct:Client	file:
ClkClientWin	dwm.c	/^       ClkClientWin, ClkRootWin, ClkLast }; \/* clicks *\/$/;"	e	enum:__anon0f53a99e0503	file:
ClkLast	dwm.c	/^       ClkClientWin, ClkRootWin, ClkLast }; \/* clicks *\/$/;"	e	enum:__anon0f53a99e0503	file:
ClkLtSymbol	dwm.c	/^enum { ClkTagBar, ClkLtSymbol, ClkStatusText, ClkWinTitle,$/;"	e	enum:__anon0f53a99e0503	file:
ClkRootWin	dwm.c	/^       ClkClientWin, ClkRootWin, ClkLast }; \/* clicks *\/$/;"	e	enum:__anon0f53a99e0503	file:
ClkStatusText	dwm.c	/^enum { ClkTagBar, ClkLtSymbol, ClkStatusText, ClkWinTitle,$/;"	e	enum:__anon0f53a99e0503	file:
ClkTagBar	dwm.c	/^enum { ClkTagBar, ClkLtSymbol, ClkStatusText, ClkWinTitle,$/;"	e	enum:__anon0f53a99e0503	file:
ClkWinTitle	dwm.c	/^enum { ClkTagBar, ClkLtSymbol, ClkStatusText, ClkWinTitle,$/;"	e	enum:__anon0f53a99e0503	file:
Clr	drw.h	/^typedef XftColor Clr;$/;"	t	typeref:typename:XftColor
ColBg	drw.h	/^enum { ColFg, ColBg, ColBorder }; \/* Clr scheme index *\/$/;"	e	enum:__anon0f5116480203
ColBorder	drw.h	/^enum { ColFg, ColBg, ColBorder }; \/* Clr scheme index *\/$/;"	e	enum:__anon0f5116480203
ColFg	drw.h	/^enum { ColFg, ColBg, ColBorder }; \/* Clr scheme index *\/$/;"	e	enum:__anon0f5116480203
Cur	drw.h	/^} Cur;$/;"	t	typeref:struct:__anon0f5116480108
CurLast	dwm.c	/^enum { CurNormal, CurResize, CurMove, CurLast }; \/* cursor *\/$/;"	e	enum:__anon0f53a99e0103	file:
CurMove	dwm.c	/^enum { CurNormal, CurResize, CurMove, CurLast }; \/* cursor *\/$/;"	e	enum:__anon0f53a99e0103	file:
CurNormal	dwm.c	/^enum { CurNormal, CurResize, CurMove, CurLast }; \/* cursor *\/$/;"	e	enum:__anon0f53a99e0103	file:
CurResize	dwm.c	/^enum { CurNormal, CurResize, CurMove, CurLast }; \/* cursor *\/$/;"	e	enum:__anon0f53a99e0103	file:
DESCRIPTION	dwm.1	/^.SH DESCRIPTION$/;"	s	title:DWM
DWM	dwm.1	/^.TH DWM 1 dwm\\-VERSION$/;"	t
Drw	drw.h	/^} Drw;$/;"	t	typeref:struct:__anon0f5116480308
FAQ	README.md	/^## FAQ$/;"	s	chapter:Luke's build of dwm
FLOAT	dwm.c	/^	FLOAT = 2$/;"	e	enum:resource_type	file:
FORCE_VSPLIT	config.def.h	/^#define FORCE_VSPLIT /;"	d
FORCE_VSPLIT	config.h	/^#define FORCE_VSPLIT /;"	d
FREETYPEINC	config.mk	/^FREETYPEINC = \/usr\/include\/freetype2$/;"	m
FREETYPELIBS	config.mk	/^FREETYPELIBS = -lfontconfig -lXft$/;"	m
Fnt	drw.h	/^typedef struct Fnt {$/;"	s
Fnt	drw.h	/^} Fnt;$/;"	t	typeref:struct:Fnt
GETINC	dwm.c	/^#define GETINC(/;"	d	file:
HEIGHT	dwm.c	/^#define HEIGHT(/;"	d	file:
INC	dwm.c	/^#define INC(/;"	d	file:
INCS	config.mk	/^INCS = -I${X11INC} -I${FREETYPEINC}$/;"	m
INTEGER	dwm.c	/^	INTEGER = 1,$/;"	e	enum:resource_type	file:
INTERSECT	dwm.c	/^#define INTERSECT(/;"	d	file:
ISINC	dwm.c	/^#define ISINC(/;"	d	file:
ISSUES	dwm.1	/^.SH ISSUES$/;"	s	title:DWM
ISVISIBLE	dwm.c	/^#define ISVISIBLE(/;"	d	file:
Installation for newbs	README.md	/^## Installation for newbs$/;"	s	chapter:Luke's build of dwm
Key	dwm.c	/^} Key;$/;"	t	typeref:struct:__anon0f53a99e0808	file:
LDFLAGS	config.mk	/^LDFLAGS  = ${LIBS}$/;"	m
LENGTH	dwm.c	/^#define LENGTH(/;"	d	file:
LIBS	config.mk	/^LIBS = -L${X11LIB} -lX11 ${XINERAMALIBS} ${FREETYPELIBS} -lX11-xcb -lxcb -lxcb-res$/;"	m
Layout	dwm.c	/^} Layout;$/;"	t	typeref:struct:__anon0f53a99e0a08	file:
Luke's build of dwm	README.md	/^# Luke's build of dwm$/;"	c
MANPREFIX	config.mk	/^MANPREFIX = ${PREFIX}\/share\/man$/;"	m
MAX	util.h	/^#define MAX(/;"	d
MIN	util.h	/^#define MIN(/;"	d
MOD	dwm.c	/^#define MOD(/;"	d	file:
MODKEY	config.def.h	/^#define MODKEY /;"	d
MODKEY	config.h	/^#define MODKEY /;"	d
MOUSEMASK	dwm.c	/^#define MOUSEMASK /;"	d	file:
Monitor	dwm.c	/^struct Monitor {$/;"	s	file:
Monitor	dwm.c	/^typedef struct Monitor Monitor;$/;"	t	typeref:struct:Monitor	file:
NAME	dwm.1	/^.SH NAME$/;"	s	title:DWM
NUMTAGS	dwm.c	/^#define NUMTAGS	/;"	d	file:
NetActiveWindow	dwm.c	/^       NetWMFullscreen, NetActiveWindow, NetWMWindowType,$/;"	e	enum:__anon0f53a99e0303	file:
NetClientList	dwm.c	/^       NetWMWindowTypeDialog, NetClientList, NetLast }; \/* EWMH atoms *\/$/;"	e	enum:__anon0f53a99e0303	file:
NetLast	dwm.c	/^       NetWMWindowTypeDialog, NetClientList, NetLast }; \/* EWMH atoms *\/$/;"	e	enum:__anon0f53a99e0303	file:
NetSupported	dwm.c	/^enum { NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	e	enum:__anon0f53a99e0303	file:
NetWMCheck	dwm.c	/^enum { NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	e	enum:__anon0f53a99e0303	file:
NetWMFullscreen	dwm.c	/^       NetWMFullscreen, NetActiveWindow, NetWMWindowType,$/;"	e	enum:__anon0f53a99e0303	file:
NetWMName	dwm.c	/^enum { NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	e	enum:__anon0f53a99e0303	file:
NetWMState	dwm.c	/^enum { NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	e	enum:__anon0f53a99e0303	file:
NetWMWindowType	dwm.c	/^       NetWMFullscreen, NetActiveWindow, NetWMWindowType,$/;"	e	enum:__anon0f53a99e0303	file:
NetWMWindowTypeDialog	dwm.c	/^       NetWMWindowTypeDialog, NetClientList, NetLast }; \/* EWMH atoms *\/$/;"	e	enum:__anon0f53a99e0303	file:
NumTags	dwm.c	/^struct NumTags { char limitexceeded[LENGTH(tags) > 31 ? -1 : 1]; };$/;"	s	file:
OBJ	Makefile	/^OBJ = ${SRC:.c=.o}$/;"	m
OPTIONS	dwm.1	/^.SH OPTIONS$/;"	s	title:DWM
PREFIX	config.mk	/^PREFIX = \/usr\/local$/;"	m
PREVSEL	dwm.c	/^#define PREVSEL /;"	d	file:
Patches and features	README.md	/^## Patches and features$/;"	s	chapter:Luke's build of dwm
Please install `libxft-bgra`!	README.md	/^## Please install `libxft-bgra`!$/;"	s	chapter:Luke's build of dwm
ResourcePref	dwm.c	/^} ResourcePref;$/;"	t	typeref:struct:__anon0f53a99e0c08	file:
Rule	dwm.c	/^} Rule;$/;"	t	typeref:struct:__anon0f53a99e0b08	file:
SEE	dwm.1	/^.SH SEE ALSO$/;"	s	title:DWM
SHCMD	config.def.h	/^#define SHCMD(/;"	d
SHCMD	config.h	/^#define SHCMD(/;"	d
SIGNALS	dwm.1	/^.SH SIGNALS$/;"	s	title:DWM
SPTAG	dwm.c	/^#define SPTAG(/;"	d	file:
SPTAGMASK	dwm.c	/^#define SPTAGMASK	/;"	d	file:
SRC	Makefile	/^SRC = drw.c dwm.c util.c$/;"	m
STACKKEYS	config.def.h	/^#define STACKKEYS(/;"	d
STACKKEYS	config.h	/^#define STACKKEYS(/;"	d
STRING	dwm.c	/^	STRING = 0,$/;"	e	enum:resource_type	file:
SYNOPSIS	dwm.1	/^.SH SYNOPSIS$/;"	s	title:DWM
SchemeNorm	dwm.c	/^enum { SchemeNorm, SchemeSel }; \/* color schemes *\/$/;"	e	enum:__anon0f53a99e0203	file:
SchemeSel	dwm.c	/^enum { SchemeNorm, SchemeSel }; \/* color schemes *\/$/;"	e	enum:__anon0f53a99e0203	file:
Signal	dwm.c	/^} Signal;$/;"	t	typeref:struct:__anon0f53a99e0908	file:
Sp	config.def.h	/^} Sp;$/;"	t	typeref:struct:__anon9258968e0108
Sp	config.h	/^} Sp;$/;"	t	typeref:struct:__anon41b17d910108
TAGKEYS	config.def.h	/^#define TAGKEYS(/;"	d
TAGKEYS	config.h	/^#define TAGKEYS(/;"	d
TAGMASK	dwm.c	/^#define TAGMASK	/;"	d	file:
TERMCLASS	config.def.h	/^#define TERMCLASS /;"	d
TERMCLASS	config.h	/^#define TERMCLASS /;"	d
TERMINAL	config.def.h	/^#define TERMINAL /;"	d
TERMINAL	config.h	/^#define TERMINAL /;"	d
TEXTW	dwm.c	/^#define TEXTW(/;"	d	file:
TRUNC	dwm.c	/^#define TRUNC(/;"	d	file:
USAGE	dwm.1	/^.SH USAGE$/;"	s	title:DWM
UTF_INVALID	drw.c	/^#define UTF_INVALID /;"	d	file:
UTF_SIZ	drw.c	/^#define UTF_SIZ /;"	d	file:
VERSION	config.mk	/^VERSION = 6.2$/;"	m
WIDTH	dwm.c	/^#define WIDTH(/;"	d	file:
WMDelete	dwm.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	e	enum:__anon0f53a99e0403	file:
WMLast	dwm.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	e	enum:__anon0f53a99e0403	file:
WMProtocols	dwm.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	e	enum:__anon0f53a99e0403	file:
WMState	dwm.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	e	enum:__anon0f53a99e0403	file:
WMTakeFocus	dwm.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	e	enum:__anon0f53a99e0403	file:
X11INC	config.mk	/^X11INC = \/usr\/X11R6\/include$/;"	m
X11LIB	config.mk	/^X11LIB = \/usr\/X11R6\/lib$/;"	m
XINERAMAFLAGS	config.mk	/^XINERAMAFLAGS = -DXINERAMA$/;"	m
XINERAMALIBS	config.mk	/^XINERAMALIBS  = -lXinerama$/;"	m
__anon0f5116480108	drw.h	/^typedef struct {$/;"	s
__anon0f5116480203	drw.h	/^enum { ColFg, ColBg, ColBorder }; \/* Clr scheme index *\/$/;"	g
__anon0f5116480308	drw.h	/^typedef struct {$/;"	s
__anon0f53a99e0103	dwm.c	/^enum { CurNormal, CurResize, CurMove, CurLast }; \/* cursor *\/$/;"	g	file:
__anon0f53a99e0203	dwm.c	/^enum { SchemeNorm, SchemeSel }; \/* color schemes *\/$/;"	g	file:
__anon0f53a99e0303	dwm.c	/^enum { NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	g	file:
__anon0f53a99e0403	dwm.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	g	file:
__anon0f53a99e0503	dwm.c	/^enum { ClkTagBar, ClkLtSymbol, ClkStatusText, ClkWinTitle,$/;"	g	file:
__anon0f53a99e060a	dwm.c	/^typedef union {$/;"	u	file:
__anon0f53a99e0708	dwm.c	/^typedef struct {$/;"	s	file:
__anon0f53a99e0808	dwm.c	/^typedef struct {$/;"	s	file:
__anon0f53a99e0908	dwm.c	/^typedef struct {$/;"	s	file:
__anon0f53a99e0a08	dwm.c	/^typedef struct {$/;"	s	file:
__anon0f53a99e0b08	dwm.c	/^typedef struct {$/;"	s	file:
__anon0f53a99e0c08	dwm.c	/^typedef struct {$/;"	s	file:
__anon41b17d910108	config.h	/^typedef struct {$/;"	s
__anon9258968e0108	config.def.h	/^typedef struct {$/;"	s
a/Makefile	diff_files/dwm-dwmc-6.2.diff	/^--- a\/Makefile$/;"	m
a/config.def.h	diff_files/dwm-alternativetags-6.2.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	diff_files/dwm-dwmc-6.2.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	diff_files/multimon-4-added-statusall-toggle-replacing-need-for-patch.diff	/^--- a\/config.def.h$/;"	m
a/dwm.c	diff_files/dwm-alternativetags-6.2.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	diff_files/dwm-cursorwarp-mononly-20210222-61bb8b2.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	diff_files/dwm-dwmc-6.2.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	diff_files/dwm-pertag-20200914-61bb8b2.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	diff_files/dwm-resizecorners-6.2.diff	/^--- a\/dwm.c	2019-02-02 10:55:28.000000000 -0200$/;"	m
a/dwm.c	diff_files/dwm-single_tagset-20211114-a786211.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	diff_files/multimon-4-added-statusall-toggle-replacing-need-for-patch.diff	/^--- a\/dwm.c$/;"	m
all	Makefile	/^all: options dwm$/;"	t
alttag	dwm.c	/^	unsigned int alttag;$/;"	m	struct:Monitor	typeref:typename:unsigned int	file:
applyrules	dwm.c	/^applyrules(Client *c)$/;"	f	typeref:typename:void
applysizehints	dwm.c	/^applysizehints(Client *c, int *x, int *y, int *w, int *h, int interact)$/;"	f	typeref:typename:int
arg	dwm.c	/^	const Arg arg;$/;"	m	struct:__anon0f53a99e0708	typeref:typename:const Arg	file:
arg	dwm.c	/^	const Arg arg;$/;"	m	struct:__anon0f53a99e0808	typeref:typename:const Arg	file:
arrange	dwm.c	/^	void (*arrange)(Monitor *);$/;"	m	struct:__anon0f53a99e0a08	typeref:typename:void (*)(Monitor *)	file:
arrange	dwm.c	/^arrange(Monitor *m)$/;"	f	typeref:typename:void
arrangemon	dwm.c	/^arrangemon(Monitor *m)$/;"	f	typeref:typename:void
attach	dwm.c	/^attach(Client *c)$/;"	f	typeref:typename:void
attachbottom	dwm.c	/^attachbottom(Client *c)$/;"	f	typeref:typename:void
attachstack	dwm.c	/^attachstack(Client *c)$/;"	f	typeref:typename:void
b/dwmc	diff_files/dwm-dwmc-6.2.diff	/^+++ b\/dwmc$/;"	n
barwin	dwm.c	/^	Window barwin;$/;"	m	struct:Monitor	typeref:typename:Window	file:
baseh	dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
basew	dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
bh	dwm.c	/^static int bh, blw = 0;      \/* bar geometry *\/$/;"	v	typeref:typename:int	file:
blw	dwm.c	/^static int bh, blw = 0;      \/* bar geometry *\/$/;"	v	typeref:typename:int	file:
borderpx	config.def.h	/^static unsigned int borderpx  = 3;        \/* border pixel of windows *\/$/;"	v	typeref:typename:unsigned int
borderpx	config.h	/^static unsigned int borderpx  = 3;        \/* border pixel of windows *\/$/;"	v	typeref:typename:unsigned int
broken	dwm.c	/^static const char broken[] = "broken";$/;"	v	typeref:typename:const char[]	file:
bstack	vanitygaps.c	/^bstack(Monitor *m)$/;"	f	typeref:typename:void	file:
button	dwm.c	/^	unsigned int button;$/;"	m	struct:__anon0f53a99e0708	typeref:typename:unsigned int	file:
buttonpress	dwm.c	/^buttonpress(XEvent *e)$/;"	f	typeref:typename:void
buttons	config.def.h	/^static Button buttons[] = {$/;"	v	typeref:typename:Button[]
buttons	config.h	/^static Button buttons[] = {$/;"	v	typeref:typename:Button[]
bw	dwm.c	/^	int bw, oldbw;$/;"	m	struct:Client	typeref:typename:int	file:
by	dwm.c	/^	int by;               \/* bar geometry *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
centeredfloatingmaster	vanitygaps.c	/^centeredfloatingmaster(Monitor *m)$/;"	f	typeref:typename:void
centeredmaster	vanitygaps.c	/^centeredmaster(Monitor *m)$/;"	f	typeref:typename:void
checkotherwm	dwm.c	/^checkotherwm(void)$/;"	f	typeref:typename:void
class	dwm.c	/^	const char *class;$/;"	m	struct:__anon0f53a99e0b08	typeref:typename:const char *	file:
clean	Makefile	/^clean:$/;"	t
cleanup	dwm.c	/^cleanup(void)$/;"	f	typeref:typename:void
cleanupmon	dwm.c	/^cleanupmon(Monitor *mon)$/;"	f	typeref:typename:void
click	dwm.c	/^	unsigned int click;$/;"	m	struct:__anon0f53a99e0708	typeref:typename:unsigned int	file:
clientmessage	dwm.c	/^clientmessage(XEvent *e)$/;"	f	typeref:typename:void
clients	dwm.c	/^	Client *clients;$/;"	m	struct:Monitor	typeref:typename:Client *	file:
cmd	config.def.h	/^	const void *cmd;$/;"	m	struct:__anon9258968e0108	typeref:typename:const void *
cmd	config.h	/^	const void *cmd;$/;"	m	struct:__anon41b17d910108	typeref:typename:const void *
colors	config.def.h	/^static char *colors[][3] = {$/;"	v	typeref:typename:char * [][3]
colors	config.h	/^static char *colors[][3] = {$/;"	v	typeref:typename:char * [][3]
configure	dwm.c	/^configure(Client *c)$/;"	f	typeref:typename:void
configurenotify	dwm.c	/^configurenotify(XEvent *e)$/;"	f	typeref:typename:void
configurerequest	dwm.c	/^configurerequest(XEvent *e)$/;"	f	typeref:typename:void
copyvalidchars	dwm.c	/^copyvalidchars(char *text, char *rawtext)$/;"	f	typeref:typename:void
createmon	dwm.c	/^createmon(void)$/;"	f	typeref:typename:Monitor *
cursor	drw.h	/^	Cursor cursor;$/;"	m	struct:__anon0f5116480108	typeref:typename:Cursor
cursor	dwm.c	/^static Cur *cursor[CurLast];$/;"	v	typeref:typename:Cur * []	file:
deck	vanitygaps.c	/^deck(Monitor *m)$/;"	f	typeref:typename:void	file:
defaultgaps	vanitygaps.c	/^defaultgaps(const Arg *arg)$/;"	f	typeref:typename:void	file:
destroynotify	dwm.c	/^destroynotify(XEvent *e)$/;"	f	typeref:typename:void
detach	dwm.c	/^detach(Client *c)$/;"	f	typeref:typename:void
detachstack	dwm.c	/^detachstack(Client *c)$/;"	f	typeref:typename:void
die	util.c	/^die(const char *fmt, ...) {$/;"	f	typeref:typename:void
dirtomon	dwm.c	/^dirtomon(int dir)$/;"	f	typeref:typename:Monitor *
dist	Makefile	/^dist: clean$/;"	t
dpy	drw.h	/^	Display *dpy;$/;"	m	struct:Fnt	typeref:typename:Display *
dpy	drw.h	/^	Display *dpy;$/;"	m	struct:__anon0f5116480308	typeref:typename:Display *
dpy	dwm.c	/^static Display *dpy;$/;"	v	typeref:typename:Display *	file:
drawable	drw.h	/^	Drawable drawable;$/;"	m	struct:__anon0f5116480308	typeref:typename:Drawable
drawbar	dwm.c	/^drawbar(Monitor *m)$/;"	f	typeref:typename:void
drawbars	dwm.c	/^drawbars(void)$/;"	f	typeref:typename:void
drw	dwm.c	/^static Drw *drw;$/;"	v	typeref:typename:Drw *	file:
drw_clr_create	drw.c	/^drw_clr_create(Drw *drw, Clr *dest, const char *clrname)$/;"	f	typeref:typename:void
drw_create	drw.c	/^drw_create(Display *dpy, int screen, Window root, unsigned int w, unsigned int h)$/;"	f	typeref:typename:Drw *
drw_cur_create	drw.c	/^drw_cur_create(Drw *drw, int shape)$/;"	f	typeref:typename:Cur *
drw_cur_free	drw.c	/^drw_cur_free(Drw *drw, Cur *cursor)$/;"	f	typeref:typename:void
drw_font_getexts	drw.c	/^drw_font_getexts(Fnt *font, const char *text, unsigned int len, unsigned int *w, unsigned int *h/;"	f	typeref:typename:void
drw_fontset_create	drw.c	/^drw_fontset_create(Drw* drw, char *fonts[], size_t fontcount)$/;"	f	typeref:typename:Fnt *
drw_fontset_free	drw.c	/^drw_fontset_free(Fnt *font)$/;"	f	typeref:typename:void
drw_fontset_getwidth	drw.c	/^drw_fontset_getwidth(Drw *drw, const char *text)$/;"	f	typeref:typename:unsigned int
drw_free	drw.c	/^drw_free(Drw *drw)$/;"	f	typeref:typename:void
drw_map	drw.c	/^drw_map(Drw *drw, Window win, int x, int y, unsigned int w, unsigned int h)$/;"	f	typeref:typename:void
drw_rect	drw.c	/^drw_rect(Drw *drw, int x, int y, unsigned int w, unsigned int h, int filled, int invert)$/;"	f	typeref:typename:void
drw_resize	drw.c	/^drw_resize(Drw *drw, unsigned int w, unsigned int h)$/;"	f	typeref:typename:void
drw_scm_create	drw.c	/^drw_scm_create(Drw *drw, char *clrnames[], size_t clrcount)$/;"	f	typeref:typename:Clr *
drw_setfontset	drw.c	/^drw_setfontset(Drw *drw, Fnt *set)$/;"	f	typeref:typename:void
drw_setscheme	drw.c	/^drw_setscheme(Drw *drw, Clr *scm)$/;"	f	typeref:typename:void
drw_text	drw.c	/^drw_text(Drw *drw, int x, int y, unsigned int w, unsigned int h, unsigned int lpad, const char */;"	f	typeref:typename:int
dst	dwm.c	/^	void *dst;$/;"	m	struct:__anon0f53a99e0c08	typeref:typename:void *	file:
dwindle	vanitygaps.c	/^dwindle(Monitor *m)$/;"	f	typeref:typename:void	file:
dwm	Makefile	/^dwm: ${OBJ}$/;"	t
dwm-6.2/config.def.h	diff_files/dwm-rounded-gaps-fullscreen.diff	/^--- dwm-6.2\/config.def.h$/;"	m
dwm-6.2/config.mk	diff_files/dwm-rounded-gaps-fullscreen.diff	/^--- dwm-6.2\/config.mk$/;"	m
dwm-6.2/dwm.c	diff_files/dwm-attachbottom-6.2.diff	/^--- dwm-6.2\/dwm.c	2019-02-02 13:55:28.000000000 +0100$/;"	m
dwm-6.2/dwm.c	diff_files/dwm-rounded-gaps-fullscreen.diff	/^--- dwm-6.2\/dwm.c$/;"	m
dwmblockspid	dwm.c	/^pid_t dwmblockspid = 0;$/;"	v	typeref:typename:pid_t
dwmblockssig	dwm.c	/^static int dwmblockssig;$/;"	v	typeref:typename:int	file:
ecalloc	util.c	/^ecalloc(size_t nmemb, size_t size)$/;"	f	typeref:typename:void *
enablegaps	vanitygaps.c	/^static int enablegaps = 1;$/;"	v	typeref:typename:int	file:
enternotify	dwm.c	/^enternotify(XEvent *e)$/;"	f	typeref:typename:void
expose	dwm.c	/^expose(XEvent *e)$/;"	f	typeref:typename:void
f	dwm.c	/^	float f;$/;"	m	union:__anon0f53a99e060a	typeref:typename:float	file:
fake_signal	dwm.c	/^fake_signal(void)$/;"	f	typeref:typename:int
fibonacci	vanitygaps.c	/^fibonacci(Monitor *m, int s)$/;"	f	typeref:typename:void	file:
focus	dwm.c	/^focus(Client *c)$/;"	f	typeref:typename:void
focusin	dwm.c	/^focusin(XEvent *e)$/;"	f	typeref:typename:void
focusmon	dwm.c	/^focusmon(const Arg *arg)$/;"	f	typeref:typename:void
focusstack	dwm.c	/^focusstack(const Arg *arg)$/;"	f	typeref:typename:void
fonts	config.def.h	/^static char *fonts[]          = { "monospace:size=12", "JoyPixels:pixelsize=10:antialias=true:au/;"	v	typeref:typename:char * []
fonts	config.h	/^static char *fonts[]          = { "monospace:size=12", "JoyPixels:pixelsize=10:antialias=true:au/;"	v	typeref:typename:char * []
fonts	drw.h	/^	Fnt *fonts;$/;"	m	struct:__anon0f5116480308	typeref:typename:Fnt *
func	dwm.c	/^	void (*func)(const Arg *);$/;"	m	struct:__anon0f53a99e0808	typeref:typename:void (*)(const Arg *)	file:
func	dwm.c	/^	void (*func)(const Arg *);$/;"	m	struct:__anon0f53a99e0908	typeref:typename:void (*)(const Arg *)	file:
func	dwm.c	/^	void (*func)(const Arg *arg);$/;"	m	struct:__anon0f53a99e0708	typeref:typename:void (*)(const Arg * arg)	file:
gappih	config.def.h	/^static unsigned int gappih    = 0;       \/* horiz inner gap between windows *\/$/;"	v	typeref:typename:unsigned int
gappih	config.h	/^static unsigned int gappih    = 0;       \/* horiz inner gap between windows *\/$/;"	v	typeref:typename:unsigned int
gappih	dwm.c	/^	int gappih;           \/* horizontal gap between windows *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
gappiv	config.def.h	/^static unsigned int gappiv    = 0;       \/* vert inner gap between windows *\/$/;"	v	typeref:typename:unsigned int
gappiv	config.h	/^static unsigned int gappiv    = 0;       \/* vert inner gap between windows *\/$/;"	v	typeref:typename:unsigned int
gappiv	dwm.c	/^	int gappiv;           \/* vertical gap between windows *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
gappoh	config.def.h	/^static unsigned int gappoh    = 0;       \/* horiz outer gap between windows and screen edge *\/$/;"	v	typeref:typename:unsigned int
gappoh	config.h	/^static unsigned int gappoh    = 0;       \/* horiz outer gap between windows and screen edge *\/$/;"	v	typeref:typename:unsigned int
gappoh	dwm.c	/^	int gappoh;           \/* horizontal outer gaps *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
gappov	config.def.h	/^static unsigned int gappov    = 0;       \/* vert outer gap between windows and screen edge *\/$/;"	v	typeref:typename:unsigned int
gappov	config.h	/^static unsigned int gappov    = 0;       \/* vert outer gap between windows and screen edge *\/$/;"	v	typeref:typename:unsigned int
gappov	dwm.c	/^	int gappov;           \/* vertical outer gaps *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
gc	drw.h	/^	GC gc;$/;"	m	struct:__anon0f5116480308	typeref:typename:GC
getatomprop	dwm.c	/^getatomprop(Client *c, Atom prop)$/;"	f	typeref:typename:Atom
getdwmblockspid	dwm.c	/^getdwmblockspid()$/;"	f	typeref:typename:int
getfacts	vanitygaps.c	/^getfacts(Monitor *m, int msize, int ssize, float *mf, float *sf, int *mr, int *sr)$/;"	f	typeref:typename:void
getgaps	vanitygaps.c	/^getgaps(Monitor *m, int *oh, int *ov, int *ih, int *iv, unsigned int *nc)$/;"	f	typeref:typename:void	file:
getparentprocess	dwm.c	/^getparentprocess(pid_t p)$/;"	f	typeref:typename:pid_t
getrootptr	dwm.c	/^getrootptr(int *x, int *y)$/;"	f	typeref:typename:int
getstate	dwm.c	/^getstate(Window w)$/;"	f	typeref:typename:long
gettextprop	dwm.c	/^gettextprop(Window w, Atom atom, char *text, unsigned int size)$/;"	f	typeref:typename:int
grabbuttons	dwm.c	/^grabbuttons(Client *c, int focused)$/;"	f	typeref:typename:void
grabkeys	dwm.c	/^grabkeys(void)$/;"	f	typeref:typename:void
h	drw.h	/^	unsigned int h;$/;"	m	struct:Fnt	typeref:typename:unsigned int
h	drw.h	/^	unsigned int w, h;$/;"	m	struct:__anon0f5116480308	typeref:typename:unsigned int
h	dwm.c	/^	int x, y, w, h;$/;"	m	struct:Client	typeref:typename:int	file:
handler	dwm.c	/^static void (*handler[LASTEvent]) (XEvent *) = {$/;"	v	typeref:typename:void (* [LASTEvent])(XEvent *)	file:
i	dwm.c	/^	int i;$/;"	m	union:__anon0f53a99e060a	typeref:typename:int	file:
inch	dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
incnmaster	dwm.c	/^incnmaster(const Arg *arg)$/;"	f	typeref:typename:void
incrgaps	vanitygaps.c	/^incrgaps(const Arg *arg)$/;"	f	typeref:typename:void	file:
incw	dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
install	Makefile	/^install: all$/;"	t
instance	dwm.c	/^	const char *instance;$/;"	m	struct:__anon0f53a99e0b08	typeref:typename:const char *	file:
isdescprocess	dwm.c	/^isdescprocess(pid_t p, pid_t c)$/;"	f	typeref:typename:int
isfixed	dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen, isterminal, noswallow, i/;"	m	struct:Client	typeref:typename:int	file:
isfloating	dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen, isterminal, noswallow, i/;"	m	struct:Client	typeref:typename:int	file:
isfloating	dwm.c	/^	int isfloating;$/;"	m	struct:__anon0f53a99e0b08	typeref:typename:int	file:
isfullscreen	dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen, isterminal, noswallow, i/;"	m	struct:Client	typeref:typename:int	file:
issticky	dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen, isterminal, noswallow, i/;"	m	struct:Client	typeref:typename:int	file:
isterminal	dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen, isterminal, noswallow, i/;"	m	struct:Client	typeref:typename:int	file:
isterminal	dwm.c	/^	int isterminal;$/;"	m	struct:__anon0f53a99e0b08	typeref:typename:int	file:
isuniquegeom	dwm.c	/^isuniquegeom(XineramaScreenInfo *unique, size_t n, XineramaScreenInfo *info)$/;"	f	typeref:typename:int	file:
isurgent	dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen, isterminal, noswallow, i/;"	m	struct:Client	typeref:typename:int	file:
keypress	dwm.c	/^keypress(XEvent *e)$/;"	f	typeref:typename:void
keyrelease	dwm.c	/^keyrelease(XEvent *e)$/;"	f	typeref:typename:void
keys	config.def.h	/^static Key keys[] = {$/;"	v	typeref:typename:Key[]
keys	config.h	/^static Key keys[] = {$/;"	v	typeref:typename:Key[]
keysym	dwm.c	/^	KeySym keysym;$/;"	m	struct:__anon0f53a99e0808	typeref:typename:KeySym	file:
killclient	dwm.c	/^killclient(const Arg *arg)$/;"	f	typeref:typename:void
layouts	config.def.h	/^static const Layout layouts[] = {$/;"	v	typeref:typename:const Layout[]
layouts	config.h	/^static const Layout layouts[] = {$/;"	v	typeref:typename:const Layout[]
limitexceeded	dwm.c	/^struct NumTags { char limitexceeded[LENGTH(tags) > 31 ? -1 : 1]; };$/;"	m	struct:NumTags	typeref:typename:char[]	file:
load_xresources	dwm.c	/^load_xresources(void)$/;"	f	typeref:typename:void
lrpad	dwm.c	/^static int lrpad;            \/* sum of left and right padding for text *\/$/;"	v	typeref:typename:int	file:
lt	dwm.c	/^	const Layout *lt[2];$/;"	m	struct:Monitor	typeref:typename:const Layout * [2]	file:
ltsymbol	dwm.c	/^	char ltsymbol[16];$/;"	m	struct:Monitor	typeref:typename:char[16]	file:
main	dwm.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	transient.c	/^int main(void) {$/;"	f	typeref:typename:int
manage	dwm.c	/^manage(Window w, XWindowAttributes *wa)$/;"	f	typeref:typename:void
mappingnotify	dwm.c	/^mappingnotify(XEvent *e)$/;"	f	typeref:typename:void
maprequest	dwm.c	/^maprequest(XEvent *e)$/;"	f	typeref:typename:void
mask	dwm.c	/^	unsigned int mask;$/;"	m	struct:__anon0f53a99e0708	typeref:typename:unsigned int	file:
maxa	dwm.c	/^	float mina, maxa;$/;"	m	struct:Client	typeref:typename:float	file:
maxh	dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
maxw	dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
mfact	config.def.h	/^static float mfact     = 0.5; \/* factor of master area size [0.05..0.95] *\/$/;"	v	typeref:typename:float
mfact	config.h	/^static float mfact     = 0.5; \/* factor of master area size [0.05..0.95] *\/$/;"	v	typeref:typename:float
mfact	dwm.c	/^	float mfact;$/;"	m	struct:Monitor	typeref:typename:float	file:
mh	dwm.c	/^	int mx, my, mw, mh;   \/* screen size *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
mina	dwm.c	/^	float mina, maxa;$/;"	m	struct:Client	typeref:typename:float	file:
minh	dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
minw	dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
mod	dwm.c	/^	unsigned int mod;$/;"	m	struct:__anon0f53a99e0808	typeref:typename:unsigned int	file:
momentaryalttags	config.def.h	/^static const int momentaryalttags = 0; \/* 1 means alttags will show only when key is held down*/;"	v	typeref:typename:const int
momentaryalttags	config.h	/^static const int momentaryalttags = 0; \/* 1 means alttags will show only when key is held down*/;"	v	typeref:typename:const int
mon	dwm.c	/^	Monitor *mon;$/;"	m	struct:Client	typeref:typename:Monitor *	file:
monitor	dwm.c	/^	int monitor;$/;"	m	struct:__anon0f53a99e0b08	typeref:typename:int	file:
monocle	dwm.c	/^monocle(Monitor *m)$/;"	f	typeref:typename:void
mons	dwm.c	/^static Monitor *mons, *selmon;$/;"	v	typeref:typename:Monitor *	file:
motionnotify	dwm.c	/^motionnotify(XEvent *e)$/;"	f	typeref:typename:void
movemouse	dwm.c	/^movemouse(const Arg *arg)$/;"	f	typeref:typename:void
mw	dwm.c	/^	int mx, my, mw, mh;   \/* screen size *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
mx	dwm.c	/^	int mx, my, mw, mh;   \/* screen size *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
my	dwm.c	/^	int mx, my, mw, mh;   \/* screen size *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
name	config.def.h	/^	const char *name;$/;"	m	struct:__anon9258968e0108	typeref:typename:const char *
name	config.h	/^	const char *name;$/;"	m	struct:__anon41b17d910108	typeref:typename:const char *
name	dwm.c	/^	char *name;$/;"	m	struct:__anon0f53a99e0c08	typeref:typename:char *	file:
name	dwm.c	/^	char name[256];$/;"	m	struct:Client	typeref:typename:char[256]	file:
netatom	dwm.c	/^static Atom wmatom[WMLast], netatom[NetLast];$/;"	v	typeref:typename:Atom[]	file:
neverfocus	dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen, isterminal, noswallow, i/;"	m	struct:Client	typeref:typename:int	file:
next	drw.h	/^	struct Fnt *next;$/;"	m	struct:Fnt	typeref:struct:Fnt *
next	dwm.c	/^	Client *next;$/;"	m	struct:Client	typeref:typename:Client *	file:
next	dwm.c	/^	Monitor *next;$/;"	m	struct:Monitor	typeref:typename:Monitor *	file:
nexttiled	dwm.c	/^nexttiled(Client *c)$/;"	f	typeref:typename:Client *
nmaster	config.def.h	/^static int nmaster     = 1;    \/* number of clients in master area *\/$/;"	v	typeref:typename:int
nmaster	config.h	/^static int nmaster     = 1;    \/* number of clients in master area *\/$/;"	v	typeref:typename:int
nmaster	dwm.c	/^	int nmaster;$/;"	m	struct:Monitor	typeref:typename:int	file:
normbgcolor	config.def.h	/^static char normbgcolor[]           = "#222222";$/;"	v	typeref:typename:char[]
normbgcolor	config.h	/^static char normbgcolor[]           = "#222222";$/;"	v	typeref:typename:char[]
normbordercolor	config.def.h	/^static char normbordercolor[]       = "#444444";$/;"	v	typeref:typename:char[]
normbordercolor	config.h	/^static char normbordercolor[]       = "#444444";$/;"	v	typeref:typename:char[]
normfgcolor	config.def.h	/^static char normfgcolor[]           = "#bbbbbb";$/;"	v	typeref:typename:char[]
normfgcolor	config.h	/^static char normfgcolor[]           = "#bbbbbb";$/;"	v	typeref:typename:char[]
noswallow	dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen, isterminal, noswallow, i/;"	m	struct:Client	typeref:typename:int	file:
noswallow	dwm.c	/^	int noswallow;$/;"	m	struct:__anon0f53a99e0b08	typeref:typename:int	file:
num	dwm.c	/^	int num;$/;"	m	struct:Monitor	typeref:typename:int	file:
numlockmask	dwm.c	/^static unsigned int numlockmask = 0;$/;"	v	typeref:typename:unsigned int	file:
oldbw	dwm.c	/^	int bw, oldbw;$/;"	m	struct:Client	typeref:typename:int	file:
oldh	dwm.c	/^	int oldx, oldy, oldw, oldh;$/;"	m	struct:Client	typeref:typename:int	file:
oldstate	dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen, isterminal, noswallow, i/;"	m	struct:Client	typeref:typename:int	file:
oldw	dwm.c	/^	int oldx, oldy, oldw, oldh;$/;"	m	struct:Client	typeref:typename:int	file:
oldx	dwm.c	/^	int oldx, oldy, oldw, oldh;$/;"	m	struct:Client	typeref:typename:int	file:
oldy	dwm.c	/^	int oldx, oldy, oldw, oldh;$/;"	m	struct:Client	typeref:typename:int	file:
options	Makefile	/^options:$/;"	t
pattern	drw.h	/^	FcPattern *pattern;$/;"	m	struct:Fnt	typeref:typename:FcPattern *
pid	dwm.c	/^	pid_t pid;$/;"	m	struct:Client	typeref:typename:pid_t	file:
pop	dwm.c	/^pop(Client *c)$/;"	f	typeref:typename:void
propertynotify	dwm.c	/^propertynotify(XEvent *e)$/;"	f	typeref:typename:void
pushstack	dwm.c	/^pushstack(const Arg *arg) {$/;"	f	typeref:typename:void
quit	dwm.c	/^quit(const Arg *arg)$/;"	f	typeref:typename:void
rawstext	dwm.c	/^static char rawstext[256];$/;"	v	typeref:typename:char[256]	file:
recttomon	dwm.c	/^recttomon(int x, int y, int w, int h)$/;"	f	typeref:typename:Monitor *
resize	dwm.c	/^resize(Client *c, int x, int y, int w, int h, int interact)$/;"	f	typeref:typename:void
resizeclient	dwm.c	/^resizeclient(Client *c, int x, int y, int w, int h)$/;"	f	typeref:typename:void
resizehints	config.def.h	/^static int resizehints = 0;    \/* 1 means respect size hints in tiled resizals *\/$/;"	v	typeref:typename:int
resizehints	config.h	/^static int resizehints = 0;    \/* 1 means respect size hints in tiled resizals *\/$/;"	v	typeref:typename:int
resizemouse	dwm.c	/^resizemouse(const Arg *arg)$/;"	f	typeref:typename:void
resource_load	dwm.c	/^resource_load(XrmDatabase db, char *name, enum resource_type rtype, void *dst)$/;"	f	typeref:typename:void
resource_type	dwm.c	/^enum resource_type {$/;"	g	file:
resources	config.def.h	/^ResourcePref resources[] = {$/;"	v	typeref:typename:ResourcePref[]
resources	config.h	/^ResourcePref resources[] = {$/;"	v	typeref:typename:ResourcePref[]
restack	dwm.c	/^restack(Monitor *m)$/;"	f	typeref:typename:void
restart	dwm.c	/^static int restart = 0;$/;"	v	typeref:typename:int	file:
root	drw.h	/^	Window root;$/;"	m	struct:__anon0f5116480308	typeref:typename:Window
root	dwm.c	/^static Window root, wmcheckwin;$/;"	v	typeref:typename:Window	file:
rules	config.def.h	/^static const Rule rules[] = {$/;"	v	typeref:typename:const Rule[]
rules	config.h	/^static const Rule rules[] = {$/;"	v	typeref:typename:const Rule[]
run	dwm.c	/^run(void)$/;"	f	typeref:typename:void
runAutostart	dwm.c	/^runAutostart(void) {$/;"	f	typeref:typename:void
running	dwm.c	/^static int running = 1;$/;"	v	typeref:typename:int	file:
scan	dwm.c	/^scan(void)$/;"	f	typeref:typename:void
scheme	drw.h	/^	Clr *scheme;$/;"	m	struct:__anon0f5116480308	typeref:typename:Clr *
scheme	dwm.c	/^static Clr **scheme;$/;"	v	typeref:typename:Clr **	file:
scratchpads	config.def.h	/^static Sp scratchpads[] = {$/;"	v	typeref:typename:Sp[]
scratchpads	config.h	/^static Sp scratchpads[] = {$/;"	v	typeref:typename:Sp[]
screen	drw.h	/^	int screen;$/;"	m	struct:__anon0f5116480308	typeref:typename:int
screen	dwm.c	/^static int screen;$/;"	v	typeref:typename:int	file:
sel	dwm.c	/^	Client *sel;$/;"	m	struct:Monitor	typeref:typename:Client *	file:
selbgcolor	config.def.h	/^static char selbgcolor[]            = "#005577";$/;"	v	typeref:typename:char[]
selbgcolor	config.h	/^static char selbgcolor[]            = "#005577";$/;"	v	typeref:typename:char[]
selbordercolor	config.def.h	/^static char selbordercolor[]        = "#770000";$/;"	v	typeref:typename:char[]
selbordercolor	config.h	/^static char selbordercolor[]        = "#770000";$/;"	v	typeref:typename:char[]
selfgcolor	config.def.h	/^static char selfgcolor[]            = "#eeeeee";$/;"	v	typeref:typename:char[]
selfgcolor	config.h	/^static char selfgcolor[]            = "#eeeeee";$/;"	v	typeref:typename:char[]
sellt	dwm.c	/^	unsigned int sellt;$/;"	m	struct:Monitor	typeref:typename:unsigned int	file:
selmon	dwm.c	/^static Monitor *mons, *selmon;$/;"	v	typeref:typename:Monitor *	file:
seltags	dwm.c	/^	unsigned int seltags;$/;"	m	struct:Monitor	typeref:typename:unsigned int	file:
sendevent	dwm.c	/^sendevent(Client *c, Atom proto)$/;"	f	typeref:typename:int
sendmon	dwm.c	/^sendmon(Client *c, Monitor *m)$/;"	f	typeref:typename:void
setclientstate	dwm.c	/^setclientstate(Client *c, long state)$/;"	f	typeref:typename:void
setfocus	dwm.c	/^setfocus(Client *c)$/;"	f	typeref:typename:void
setfullscreen	dwm.c	/^setfullscreen(Client *c, int fullscreen)$/;"	f	typeref:typename:void
setgaps	vanitygaps.c	/^setgaps(int oh, int ov, int ih, int iv)$/;"	f	typeref:typename:void	file:
setlayout	dwm.c	/^setlayout(const Arg *arg)$/;"	f	typeref:typename:void
setlayoutex	config.def.h	/^setlayoutex(const Arg *arg)$/;"	f	typeref:typename:void
setlayoutex	config.h	/^setlayoutex(const Arg *arg)$/;"	f	typeref:typename:void
setmfact	dwm.c	/^setmfact(const Arg *arg)$/;"	f	typeref:typename:void
setup	dwm.c	/^setup(void)$/;"	f	typeref:typename:void
seturgent	dwm.c	/^seturgent(Client *c, int urg)$/;"	f	typeref:typename:void
sh	dwm.c	/^static int sw, sh;           \/* X display screen geometry width, height *\/$/;"	v	typeref:typename:int	file:
shifttag	shiftview.c	/^shifttag(const Arg *arg)$/;"	f	typeref:typename:void
shiftview	shiftview.c	/^shiftview(const Arg *arg)$/;"	f	typeref:typename:void
showbar	config.def.h	/^static int showbar            = 1;        \/* 0 means no bar *\/$/;"	v	typeref:typename:int
showbar	config.h	/^static int showbar            = 1;        \/* 0 means no bar *\/$/;"	v	typeref:typename:int
showbar	dwm.c	/^	int showbar;$/;"	m	struct:Monitor	typeref:typename:int	file:
showhide	dwm.c	/^showhide(Client *c)$/;"	f	typeref:typename:void
sig	dwm.c	/^	const char * sig;$/;"	m	struct:__anon0f53a99e0908	typeref:typename:const char *	file:
sigchld	dwm.c	/^sigchld(int unused)$/;"	f	typeref:typename:void
sigdwmblocks	dwm.c	/^sigdwmblocks(const Arg *arg)$/;"	f	typeref:typename:void
sighup	dwm.c	/^sighup(int unused)$/;"	f	typeref:typename:void
signal	dwmc	/^signal() {$/;"	f
signals	config.def.h	/^static Signal signals[] = {$/;"	v	typeref:typename:Signal[]
signals	config.h	/^static Signal signals[] = {$/;"	v	typeref:typename:Signal[]
sigterm	dwm.c	/^sigterm(int unused)$/;"	f	typeref:typename:void
smartgaps	config.def.h	/^static int smartgaps          = 1;        \/* 1 means no outer gap when there is only one window/;"	v	typeref:typename:int
smartgaps	config.h	/^static int smartgaps          = 1;        \/* 1 means no outer gap when there is only one window/;"	v	typeref:typename:int
snap	config.def.h	/^static unsigned int snap      = 32;       \/* snap pixel *\/$/;"	v	typeref:typename:unsigned int
snap	config.h	/^static unsigned int snap      = 32;       \/* snap pixel *\/$/;"	v	typeref:typename:unsigned int
snext	dwm.c	/^	Client *snext;$/;"	m	struct:Client	typeref:typename:Client *	file:
spawn	dwm.c	/^spawn(const Arg *arg)$/;"	f	typeref:typename:void
spcmd1	config.def.h	/^const char *spcmd1[] = {TERMINAL, "-n", "spterm", "-g", "120x34", NULL };$/;"	v	typeref:typename:const char * []
spcmd1	config.h	/^const char *spcmd1[] = {TERMINAL, "-n", "spterm", "-g", "120x34", NULL };$/;"	v	typeref:typename:const char * []
spcmd2	config.def.h	/^const char *spcmd2[] = {TERMINAL, "-n", "spcalc", "-f", "monospace:size=16", "-g", "50x20", "-e"/;"	v	typeref:typename:const char * []
spcmd2	config.h	/^const char *spcmd2[] = {TERMINAL, "-n", "spcalc", "-f", "monospace:size=16", "-g", "50x20", "-e"/;"	v	typeref:typename:const char * []
spiral	vanitygaps.c	/^spiral(Monitor *m)$/;"	f	typeref:typename:void	file:
stack	dwm.c	/^	Client *stack;$/;"	m	struct:Monitor	typeref:typename:Client *	file:
stackpos	dwm.c	/^stackpos(const Arg *arg) {$/;"	f	typeref:typename:int
stext	dwm.c	/^static char stext[256];$/;"	v	typeref:typename:char[256]	file:
sw	dwm.c	/^static int sw, sh;           \/* X display screen geometry width, height *\/$/;"	v	typeref:typename:int	file:
swallow	dwm.c	/^swallow(Client *p, Client *c)$/;"	f	typeref:typename:void
swallowfloating	config.def.h	/^static int swallowfloating    = 0;        \/* 1 means swallow floating windows by default *\/$/;"	v	typeref:typename:int
swallowfloating	config.h	/^static int swallowfloating    = 0;        \/* 1 means swallow floating windows by default *\/$/;"	v	typeref:typename:int
swallowing	dwm.c	/^	Client *swallowing;$/;"	m	struct:Client	typeref:typename:Client *	file:
swallowingclient	dwm.c	/^swallowingclient(Window w)$/;"	f	typeref:typename:Client *
symbol	dwm.c	/^	const char *symbol;$/;"	m	struct:__anon0f53a99e0a08	typeref:typename:const char *	file:
tag	dwm.c	/^tag(const Arg *arg)$/;"	f	typeref:typename:void
tagall	config.def.h	/^tagall(const Arg *arg)$/;"	f	typeref:typename:void
tagall	config.h	/^tagall(const Arg *arg)$/;"	f	typeref:typename:void
tagex	config.def.h	/^tagex(const Arg *arg)$/;"	f	typeref:typename:void
tagex	config.h	/^tagex(const Arg *arg)$/;"	f	typeref:typename:void
tagmon	dwm.c	/^tagmon(const Arg *arg)$/;"	f	typeref:typename:void
tags	config.def.h	/^static const char *tags[] = { "1", "2", "3", "4", "5", "6", "7", "8", "9" };$/;"	v	typeref:typename:const char * []
tags	config.h	/^static const char *tags[] = { "1", "2", "3", "4", "5", "6", "7", "8", "9" };$/;"	v	typeref:typename:const char * []
tags	dwm.c	/^	unsigned int tags;$/;"	m	struct:Client	typeref:typename:unsigned int	file:
tags	dwm.c	/^	unsigned int tags;$/;"	m	struct:__anon0f53a99e0b08	typeref:typename:unsigned int	file:
tagsalt	config.def.h	/^static const char *tagsalt[] = { "1", "2", "3", "4", "5", "6", "7", "8", "9" };$/;"	v	typeref:typename:const char * []
tagsalt	config.h	/^static const char *tagsalt[] = { "1", "2", "3", "4", "5", "6", "7", "8", "9" };$/;"	v	typeref:typename:const char * []
tagset	dwm.c	/^	unsigned int tagset[2];$/;"	m	struct:Monitor	typeref:typename:unsigned int[2]	file:
termcmd	config.def.h	/^static const char *termcmd[]  = { TERMINAL, NULL };$/;"	v	typeref:typename:const char * []
termcmd	config.h	/^static const char *termcmd[]  = { TERMINAL, NULL };$/;"	v	typeref:typename:const char * []
termforwin	dwm.c	/^termforwin(const Client *w)$/;"	f	typeref:typename:Client *
tile	vanitygaps.c	/^tile(Monitor *m)$/;"	f	typeref:typename:void	file:
title	dwm.c	/^	const char *title;$/;"	m	struct:__anon0f53a99e0b08	typeref:typename:const char *	file:
togglealttag	dwm.c	/^togglealttag()$/;"	f	typeref:typename:void
togglebar	dwm.c	/^togglebar(const Arg *arg)$/;"	f	typeref:typename:void
togglefloating	dwm.c	/^togglefloating(const Arg *arg)$/;"	f	typeref:typename:void
togglefullscr	dwm.c	/^togglefullscr(const Arg *arg)$/;"	f	typeref:typename:void
togglegaps	vanitygaps.c	/^togglegaps(const Arg *arg)$/;"	f	typeref:typename:void	file:
togglescratch	dwm.c	/^togglescratch(const Arg *arg)$/;"	f	typeref:typename:void
togglesticky	dwm.c	/^togglesticky(const Arg *arg)$/;"	f	typeref:typename:void
toggletag	dwm.c	/^toggletag(const Arg *arg)$/;"	f	typeref:typename:void
toggletagex	config.def.h	/^toggletagex(const Arg *arg)$/;"	f	typeref:typename:void
toggletagex	config.h	/^toggletagex(const Arg *arg)$/;"	f	typeref:typename:void
toggleview	dwm.c	/^toggleview(const Arg *arg)$/;"	f	typeref:typename:void
toggleviewex	config.def.h	/^toggleviewex(const Arg *arg)$/;"	f	typeref:typename:void
toggleviewex	config.h	/^toggleviewex(const Arg *arg)$/;"	f	typeref:typename:void
topbar	config.def.h	/^static int topbar             = 1;        \/* 0 means bottom bar *\/$/;"	v	typeref:typename:int
topbar	config.h	/^static int topbar             = 1;        \/* 0 means bottom bar *\/$/;"	v	typeref:typename:int
topbar	dwm.c	/^	int topbar;$/;"	m	struct:Monitor	typeref:typename:int	file:
type	dwm.c	/^	enum resource_type type;$/;"	m	struct:__anon0f53a99e0c08	typeref:enum:resource_type	file:
ui	dwm.c	/^	unsigned int ui;$/;"	m	union:__anon0f53a99e060a	typeref:typename:unsigned int	file:
unfocus	dwm.c	/^unfocus(Client *c, int setfocus)$/;"	f	typeref:typename:void
uninstall	Makefile	/^uninstall:$/;"	t
unmanage	dwm.c	/^unmanage(Client *c, int destroyed)$/;"	f	typeref:typename:void
unmapnotify	dwm.c	/^unmapnotify(XEvent *e)$/;"	f	typeref:typename:void
unswallow	dwm.c	/^unswallow(Client *c)$/;"	f	typeref:typename:void
updatebarpos	dwm.c	/^updatebarpos(Monitor *m)$/;"	f	typeref:typename:void
updatebars	dwm.c	/^updatebars(void)$/;"	f	typeref:typename:void
updateclientlist	dwm.c	/^updateclientlist()$/;"	f	typeref:typename:void
updategeom	dwm.c	/^updategeom(void)$/;"	f	typeref:typename:int
updatenumlockmask	dwm.c	/^updatenumlockmask(void)$/;"	f	typeref:typename:void
updatesizehints	dwm.c	/^updatesizehints(Client *c)$/;"	f	typeref:typename:void
updatestatus	dwm.c	/^updatestatus(void)$/;"	f	typeref:typename:void
updatetitle	dwm.c	/^updatetitle(Client *c)$/;"	f	typeref:typename:void
updatewindowtype	dwm.c	/^updatewindowtype(Client *c)$/;"	f	typeref:typename:void
updatewmhints	dwm.c	/^updatewmhints(Client *c)$/;"	f	typeref:typename:void
utf8decode	drw.c	/^utf8decode(const char *c, long *u, size_t clen)$/;"	f	typeref:typename:size_t	file:
utf8decodebyte	drw.c	/^utf8decodebyte(const char c, size_t *i)$/;"	f	typeref:typename:long	file:
utf8validate	drw.c	/^utf8validate(long *u, size_t i)$/;"	f	typeref:typename:size_t	file:
utfbyte	drw.c	/^static const unsigned char utfbyte[UTF_SIZ + 1] = {0x80,    0, 0xC0, 0xE0, 0xF0};$/;"	v	typeref:typename:const unsigned char[]	file:
utfmask	drw.c	/^static const unsigned char utfmask[UTF_SIZ + 1] = {0xC0, 0x80, 0xE0, 0xF0, 0xF8};$/;"	v	typeref:typename:const unsigned char[]	file:
utfmax	drw.c	/^static const long utfmax[UTF_SIZ + 1] = {0x10FFFF, 0x7F, 0x7FF, 0xFFFF, 0x10FFFF};$/;"	v	typeref:typename:const long[]	file:
utfmin	drw.c	/^static const long utfmin[UTF_SIZ + 1] = {       0,    0,  0x80,  0x800,  0x10000};$/;"	v	typeref:typename:const long[]	file:
v	dwm.c	/^	const void *v;$/;"	m	union:__anon0f53a99e060a	typeref:typename:const void *	file:
view	dwm.c	/^view(const Arg *arg)$/;"	f	typeref:typename:void
viewall	config.def.h	/^viewall(const Arg *arg)$/;"	f	typeref:typename:void
viewall	config.h	/^viewall(const Arg *arg)$/;"	f	typeref:typename:void
viewex	config.def.h	/^viewex(const Arg *arg)$/;"	f	typeref:typename:void
viewex	config.h	/^viewex(const Arg *arg)$/;"	f	typeref:typename:void
w	drw.h	/^	unsigned int w, h;$/;"	m	struct:__anon0f5116480308	typeref:typename:unsigned int
w	dwm.c	/^	int x, y, w, h;$/;"	m	struct:Client	typeref:typename:int	file:
wh	dwm.c	/^	int wx, wy, ww, wh;   \/* window area  *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
win	dwm.c	/^	Window win;$/;"	m	struct:Client	typeref:typename:Window	file:
winpid	dwm.c	/^winpid(Window w)$/;"	f	typeref:typename:pid_t
wintoclient	dwm.c	/^wintoclient(Window w)$/;"	f	typeref:typename:Client *
wintomon	dwm.c	/^wintomon(Window w)$/;"	f	typeref:typename:Monitor *
wmatom	dwm.c	/^static Atom wmatom[WMLast], netatom[NetLast];$/;"	v	typeref:typename:Atom[]	file:
wmcheckwin	dwm.c	/^static Window root, wmcheckwin;$/;"	v	typeref:typename:Window	file:
ww	dwm.c	/^	int wx, wy, ww, wh;   \/* window area  *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
wx	dwm.c	/^	int wx, wy, ww, wh;   \/* window area  *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
wy	dwm.c	/^	int wx, wy, ww, wh;   \/* window area  *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
x	dwm.c	/^	int x, y, w, h;$/;"	m	struct:Client	typeref:typename:int	file:
xcon	dwm.c	/^static xcb_connection_t *xcon;$/;"	v	typeref:typename:xcb_connection_t *	file:
xerror	dwm.c	/^xerror(Display *dpy, XErrorEvent *ee)$/;"	f	typeref:typename:int
xerrordummy	dwm.c	/^xerrordummy(Display *dpy, XErrorEvent *ee)$/;"	f	typeref:typename:int
xerrorstart	dwm.c	/^xerrorstart(Display *dpy, XErrorEvent *ee)$/;"	f	typeref:typename:int
xerrorxlib	dwm.c	/^static int (*xerrorxlib)(Display *, XErrorEvent *);$/;"	v	typeref:typename:int (*)(Display *,XErrorEvent *)	file:
xfont	drw.h	/^	XftFont *xfont;$/;"	m	struct:Fnt	typeref:typename:XftFont *
xfont_create	drw.c	/^xfont_create(Drw *drw, const char *fontname, FcPattern *fontpattern)$/;"	f	typeref:typename:Fnt *	file:
xfont_free	drw.c	/^xfont_free(Fnt *font)$/;"	f	typeref:typename:void	file:
y	dwm.c	/^	int x, y, w, h;$/;"	m	struct:Client	typeref:typename:int	file:
zoom	dwm.c	/^zoom(const Arg *arg)$/;"	f	typeref:typename:void
